import { List } from "./List";
/**
 * Represents an alphabetical list.
 *
 * @template T
 * The type of the items.
 */
export declare class AlphabeticalList<T> extends List<T> {
    /**
     * The inner collection.
     */
    private innerCollection;
    /**
     * Initializes a new instance of the {@link AlphabeticalArray `AlphabeticalArray<T>`} class.
     */
    constructor();
    /**
     * Initializes a new instance of the {@link AlphabeticalArray `AlphabeticalArray<T>`} class.
     *
     * @param entries
     * The entries to add.
     */
    constructor(entries: Iterable<T>);
    /**
     * @inheritdoc
     */
    get Count(): number;
    /**
     * @inheritdoc
     */
    get Entries(): Array<[number, T]>;
    /**
     * @inheritdoc
     *
     * @param item
     * The item to add.
     */
    Add(item: T): void;
    /**
     * @inheritdoc
     *
     * @param items
     * The items to add.
     */
    AddRange(items: readonly T[]): void;
    /**
     * @inheritdoc
     *
     * @param item
     * The item to remove.
     */
    Remove(item: T): void;
    /**
     * @inheritdoc
     *
     * @param index
     * The index of the item to remove.
     */
    RemoveAt(index: number): void;
    /**
     * @inheritdoc
     */
    Clear(): void;
}
